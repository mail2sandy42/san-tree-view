[["/home/project/src/app/demo-page/demo-page.component.ts","import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TreeViewComponent, TreeNode } from '../tree-view/tree-view.component';\n\n@Component({\n  selector: 'app-demo-page',\n  standalone: true,\n  imports: [CommonModule, FormsModule, TreeViewComponent],\n  templateUrl: './demo-page.component.html',\n  styleUrls: ['./demo-page.component.scss']\n})\nexport class DemoPageComponent implements OnInit {\n  treeData: TreeNode[] = [];\n  backupTreeData: TreeNode[] = [];\n  highlightNode: TreeNode | null = null;\n  eventLog: string[] = [];\n  newNodeName: string = '';\n  selectedNode: TreeNode | null = null;\n\n  ngOnInit() {\n    this.initializeTreeData();\n  }\n\n  initializeTreeData() {\n    this.treeData = [\n      {\n        id: '1',\n        name: 'Root',\n        icon: 'fa-solid fa-folder',\n        expanded: true,\n        actions:{add:true,delete:true},\n        showChildCount:true,\n        children: [\n          {\n            id: '2',\n            name: 'Child 1',\n            icon: 'fa-solid fa-folder',\n            expanded: true,\n            actions:{add:true,delete:true},\n            showChildCount:true,\n            children: [\n              { id: '5', name: 'Grandchild 1', icon: 'fa-regular fa-file' },\n              { id: '6', name: 'Grandchild 2', icon: 'fa-regular fa-file' }\n            ]\n          },\n          {\n            id: '3',\n            name: 'Child 2',\n            icon: 'fa-solid fa-folder',\n            actions:{add:false,delete:true},\n            children: [\n              { id: '7', name: 'Grandchild 3', icon: 'fa-regular fa-file' },\n              { id: '8', name: 'Grandchild 4', icon: 'fa-regular fa-file' }\n            ]\n          },\n          { \n            id: '4', \n            name: 'Child 3', \n            icon: 'fa-solid fa-folder',\n            tooltip: 'This is Child 3',\n            disabled: true\n          }\n        ]\n      }\n    ];\n    this.backupTreeData = JSON.parse(JSON.stringify(this.treeData));\n  }\n\n  onNodeExpanded(node: TreeNode) {\n    this.logEvent(`Node expanded: ${node.name}`);\n  }\n\n  onNodeCollapsed(node: TreeNode) {\n    this.logEvent(`Node collapsed: ${node.name}`);\n  }\n\n  onNodeClicked(node: TreeNode) {\n    this.logEvent(`Node clicked: ${node.name}`);\n    this.selectedNode = node;\n  }\n\n  onNodeDoubleClicked(node: TreeNode) {\n    this.logEvent(`Node double-clicked: ${node.name}`);\n  }\n\n  addNode() {\n    if (this.selectedNode && this.newNodeName) {\n      if (!this.selectedNode.children) {\n        this.selectedNode.children = [];\n      }\n      const newNode: TreeNode = {\n        id: `new-${Date.now()}`,\n        name: this.newNodeName,\n        icon: 'fa-regular fa-file'\n      };\n      this.selectedNode.children.push(newNode);\n      this.newNodeName = '';\n      this.logEvent(`New node added: ${newNode.name}`);\n    }\n  }\n\n  resetTree() {\n    this.treeData = JSON.parse(JSON.stringify(this.backupTreeData));\n    this.logEvent('Tree reset to initial state');\n  }\n\n  logEvent(event: string) {\n    this.eventLog.unshift(event);\n    if (this.eventLog.length > 5) {\n      this.eventLog.pop();\n    }\n  }\n}"],["/home/project/src/app/demo-page/demo-page.component.html","<h1>Angular Tree View Demo</h1>\n\n<div class=\"demo-controls\">\n  <button (click)=\"addNode()\">Add Node</button>\n  <button (click)=\"resetTree()\">Reset Tree</button>\n</div>\n\n<div class=\"tree-container\">\n  <app-tree-view \n    [nodes]=\"treeData\"\n    [highlightNode]=\"highlightNode\"\n    (nodeExpanded)=\"onNodeExpanded($event)\"\n    (nodeCollapsed)=\"onNodeCollapsed($event)\"\n    (nodeClicked)=\"onNodeClicked($event)\"\n    (nodeDoubleClicked)=\"onNodeDoubleClicked($event)\"\n  ></app-tree-view>\n</div>\n\n<div class=\"add-node-form\">\n  <input type=\"text\" [(ngModel)]=\"newNodeName\" placeholder=\"New node name\">\n  <button (click)=\"addNode()\">Add Node</button>\n</div>\n\n<div class=\"event-log\">\n  <h2>Event Log</h2>\n  <ul>\n    <li *ngFor=\"let event of eventLog\">{{ event }}</li>\n  </ul>\n</div>"],["/home/project/src/app/tree-view/tree-view.component.html","<ul class=\"tree-view\">\n  <li *ngFor=\"let node of nodes\">\n    <div class=\"node-container\">\n      <div class=\"title-container\"\n        [class.cursor-pointer]=\"!node.disabled\" \n        [class.cursor-disabled]=\"node.disabled\"\n        [class.expandable]=\"node.children && node.children.length > 0\"\n        [class.expanded]=\"node.expanded\"\n        [class.highlighted]=\"isHighlighted(node)\"\n        (click)=\"onNodeClick(node)\"\n        (dblclick)=\"onNodeDoubleClick(node, $event)\"\n        [title]=\"node.tooltip || ''\"\n      >\n        <i class=\"fa-fw\" [ngClass]=\"getNodeIcon(node)\"></i>\n        <span>{{ node.name }}</span>\n        <span *ngIf=\"node.showChildCount && node.children\">({{ node.children.length }})</span>\n      </div>\n      <div class=\"node-actions\" *ngIf=\"node.actions?.add || node.actions?.delete\">\n        <button class=\"action-button\" *ngIf=\"node.actions?.add\" title=\"Add a new item\"\n          (click)=\"onAddClick(node)\"><i class=\"fas fa-plus\"></i></button>\n        <button class=\"action-button\" *ngIf=\"node.actions?.delete\" title=\"Delete this item\"\n          (click)=\"onRemoveClick(node)\"><i class=\"fas fa-minus\"></i></button>\n      </div>\n    </div>\n    <app-tree-view\n      *ngIf=\"node.children && node.children.length > 0 && node.expanded\"\n      [nodes]=\"node.children\"\n      [highlightNode]=\"highlightNode\"\n      (nodeExpanded)=\"onChildNodeExpanded($event)\"\n      (nodeCollapsed)=\"onChildNodeCollapsed($event)\"\n      (nodeClicked)=\"onChildNodeClicked($event)\"\n      (nodeDoubleClicked)=\"onChildNodeDoubleClicked($event)\"\n      (nodeAdded)=\"onChildNodeAdded($event)\"\n      (nodeRemoved)=\"onChildNodeRemoved($event)\"\n    ></app-tree-view>\n  </li>\n</ul>"]]